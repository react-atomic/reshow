stages:
  - info
  - test
  - build
  - deploy

variables:
  LATEST_TAG: 0.0.0
  LAST_IMAGE_STORE: ./last-image

.parallel:
  parallel:
    matrix:
      - dockerTag: [0.0.0]

default:
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  after_script:
    - docker logout
  tags:
    - swarm-cluster
    - docker

# https://docs.gitlab.com/ee/ci/yaml/index.html
info-section:
  # available stages are .pre, .post and form stages
  stage: info
  script:
    - echo "Display Information"
    - date
    - echo "$CI_PIPELINE_ID"

pre-test:
  stage: test
  image: $CI_TERRATEST
  script:
    - go test -v ./test

build-docker-image:
  extends: .parallel
  stage: build
  script:
    - IMAGE_NAME=$CI_REGISTRY_IMAGE:$dockerTag-$CI_PIPELINE_ID
    - echo $IMAGE_NAME > $LAST_IMAGE_STORE
    - echo $IMAGE_NAME
    - echo 'Start build docker images:' $dockerTag
    - DOCKER_BUILDKIT=1 docker build -f Dockerfile --target $dockerTag -t $IMAGE_NAME .
    - docker images | head -10 || trap '' PIPE
    - docker push $IMAGE_NAME
  artifacts:
    paths:
      - $LAST_IMAGE_STORE

e2e-test:
  stage: test
  needs: ["build-docker-image"]
  trigger:
    include:
      - local: .gitlab-trigger.yml

put-to-stable:
  extends: .parallel
  stage: deploy
  rules:
    - when: manual
  script:
    - STABLE_NAME=$CI_REGISTRY_IMAGE:$dockerTag
    - echo 'Put Image to Stable:' $dockerTag
    - IMAGE_NAME=$(cat $LAST_IMAGE_STORE)
    - docker pull $IMAGE_NAME
    - docker tag $IMAGE_NAME $STABLE_NAME
    - docker push $STABLE_NAME
    - |
      if [ "x$LATEST_TAG" == "x$dockerTag" ]; then
        docker tag $$IMAGE_NAME $CI_REGISTRY_IMAGE:latest
        docker push $CI_REGISTRY_IMAGE:latest
      fi
